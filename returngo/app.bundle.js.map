{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/selector.js","webpack:///../src/util.js","webpack:///../src/eventHandlers.js","webpack:///../src/index.js","webpack:///./src/js/hmbBtn.js","webpack:///./src/js/select2Init.js","webpack:///./src/js/rgColorPicker.js","webpack:///./src/js/rgFileInput.js","webpack:///./src/js/industryAddon.js","webpack:///./src/js/industruReasonChange.js","webpack:///./src/js/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Selector","getDefaultText","input","defaultText","label","findFirstChildNode","element","childNodes","slice","node","restoreDefaultText","fileApi","window","this","parentNode","querySelector","inputValue","file","splittedValue","getSelectedFiles","customFileList","querySelectorAll","len","Event","init","inputSelector","formSelector","customFileInputList","document","formList","writable","handleInputChange","destroy","form","hmbBtn","menuBtn","getElementById","sidebar","togglemenu","classList","toggle","addEventListener","select2Init","$","each","$parent","parent","select2","minimumResultsForSearch","Infinity","width","dropdownParent","rgColorPicker","defColorElement","defColorTextElement","defTextColorPickerChange","e","target","defColorPickerChange","console","log","rgFileInput","bsCustomFileInput","industryAddon","industryAddBtn","maxindustryQuantity","industryQuantity","industryInput","industryAddedList","industryAddedItems","length","addIndustry","addedItems","map","item","includes","trim","industryLi","createElement","className","innerHTML","append","removeIndustry","closeitem","closest","remove","industruReasonChange","changeReasonBtns","changeReason","inputElement","removeAttribute","dataset","reason","focus","tooltip"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const Selector = {\n  CUSTOMFILE: '.custom-file input[type=\"file\"]',\n  CUSTOMFILELABEL: '.custom-file-label',\n  FORM: 'form',\n  INPUT: 'input',\n}\n\nexport default Selector\n","import Selector from './selector'\n\nconst textNodeType = 3\nconst getDefaultText = (input) => {\n  let defaultText = ''\n\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    defaultText = label.textContent\n  }\n\n  return defaultText\n}\n\nconst findFirstChildNode = (element) => {\n  if (element.childNodes.length > 0) {\n    const childNodes = [].slice.call(element.childNodes)\n\n    for (let i = 0; i < childNodes.length; i++) {\n      const node = childNodes[i]\n      if (node.nodeType !== textNodeType) {\n        return node\n      }\n    }\n  }\n\n  return element\n}\n\nconst restoreDefaultText = (input) => {\n  const defaultText = input.bsCustomFileInput.defaultText\n  const label = input.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n\n    element.textContent = defaultText\n  }\n}\n\nexport {\n  getDefaultText,\n  findFirstChildNode,\n  restoreDefaultText,\n}\n","import { findFirstChildNode, restoreDefaultText } from './util'\nimport Selector from './selector'\n\nconst fileApi = !!window.File\nconst FAKE_PATH = 'fakepath'\nconst FAKE_PATH_SEPARATOR = '\\\\'\n\nconst getSelectedFiles = (input) => {\n  if (input.hasAttribute('multiple') && fileApi) {\n    return [].slice.call(input.files)\n      .map((file) => file.name)\n      .join(', ')\n  }\n\n  if (input.value.indexOf(FAKE_PATH) !== -1) {\n    const splittedValue = input.value.split(FAKE_PATH_SEPARATOR)\n\n    return splittedValue[splittedValue.length - 1]\n  }\n\n  return input.value\n}\n\nfunction handleInputChange() {\n  const label = this.parentNode.querySelector(Selector.CUSTOMFILELABEL)\n\n  if (label) {\n    const element = findFirstChildNode(label)\n    const inputValue = getSelectedFiles(this)\n\n    if (inputValue.length) {\n      element.textContent = inputValue\n    } else {\n      restoreDefaultText(this)\n    }\n  }\n}\n\nfunction handleFormReset() {\n  const customFileList = [].slice.call(this.querySelectorAll(Selector.INPUT))\n    .filter((input) => !!input.bsCustomFileInput)\n\n  for (let i = 0, len = customFileList.length; i < len; i++) {\n    restoreDefaultText(customFileList[i])\n  }\n}\n\nexport {\n  handleInputChange,\n  handleFormReset,\n}\n","import { getDefaultText, restoreDefaultText } from './util'\nimport { handleFormReset, handleInputChange } from './eventHandlers'\nimport Selector from './selector'\n\nconst customProperty = 'bsCustomFileInput'\nconst Event = {\n  FORMRESET   : 'reset',\n  INPUTCHANGE : 'change',\n}\n\nconst bsCustomFileInput = {\n  init(inputSelector = Selector.CUSTOMFILE, formSelector = Selector.FORM) {\n    const customFileInputList = [].slice.call(document.querySelectorAll(inputSelector))\n    const formList = [].slice.call(document.querySelectorAll(formSelector))\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      Object.defineProperty(input, customProperty, {\n        value: {\n          defaultText: getDefaultText(input),\n        },\n        writable: true,\n      })\n\n      handleInputChange.call(input)\n      input.addEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].addEventListener(Event.FORMRESET, handleFormReset)\n      Object.defineProperty(formList[i], customProperty, {\n        value: true,\n        writable: true,\n      })\n    }\n  },\n\n  destroy() {\n    const formList = [].slice.call(document.querySelectorAll(Selector.FORM))\n      .filter((form) => !!form.bsCustomFileInput)\n    const customFileInputList = [].slice.call(document.querySelectorAll(Selector.INPUT))\n      .filter((input) => !!input.bsCustomFileInput)\n\n    for (let i = 0, len = customFileInputList.length; i < len; i++) {\n      const input = customFileInputList[i]\n\n      restoreDefaultText(input)\n      input[customProperty] = undefined\n\n      input.removeEventListener(Event.INPUTCHANGE, handleInputChange)\n    }\n\n    for (let i = 0, len = formList.length; i < len; i++) {\n      formList[i].removeEventListener(Event.FORMRESET, handleFormReset)\n      formList[i][customProperty] = undefined\n    }\n  },\n}\n\nexport default bsCustomFileInput\n","const hmbBtn = () => {\n  const menuBtn = document.getElementById('menu-btn');\n  const sidebar = document.getElementById('sidebar');    \n  const togglemenu = () => {\n    menuBtn.classList.toggle('active');\n    sidebar.classList.toggle('active');\n  };\n  if (menuBtn) {\n    menuBtn.addEventListener('click', togglemenu);\n  }\n};\n\nexport default hmbBtn;\n","const select2Init = () => {\n  // console.log(\"APP select2 initialization\");\n  $('.js-select2-int-box .js-select2').each(function () {\n    const $parent = $(this).parent();\n    $(this).select2({\n      minimumResultsForSearch: Infinity,\n      width: '100%',\n      dropdownParent: $parent,\n      // dropdownPosition: 'below',\n      // dropdownPosition: 'above',\n    });\n  });\n}\nexport default select2Init;\n\n\n\n// defoult render dropdown into parent <body>\n// $('.js-select2').select2(\n//   {\n//     minimumResultsForSearch: Infinity,\n//     width: '100%',\n//   },\n// );\n// render dropdown into parent element .js-select2-int-box\n// $('.js-select2-int-box .js-select2').each(function () {\n//   const $parent = $(this).parent();\n//   $(this).select2({\n//     minimumResultsForSearch: Infinity,\n//     width: '100%',\n//     dropdownParent: $parent,\n//     // dropdownPosition: 'below',\n//     // dropdownPosition: 'above',\n//   });\n// }); \n\n// render dropdown into parent element .js-select2-modal-box\n// $('.js-select2-modal-box .js-select2').each( function () {});  // for future select in modal","const rgColorPicker = () => {\n  const defColorElement = document.getElementById('defTextColorPicker');\n  const defColorTextElement = document.getElementById('defTextColor');\n  if (defColorElement && defColorTextElement) {\n    const defTextColorPickerChange = (e) => {\n      defColorTextElement.value = e.target.value;\n    };\n    const defColorPickerChange = (e) => {\n      console.log(e.target.value);\n      defColorElement.value = e.target.value;\n    };\n    defColorElement.addEventListener('input', defTextColorPickerChange);\n    defColorTextElement.addEventListener('input', defColorPickerChange);\n    // defColorElement.addEventListener('change', defTextColorPickerChange);\n    // defColorTextElement.addEventListener('change', defColorPickerChange);\n  }\n};\nexport default rgColorPicker;\n","import bsCustomFileInput from 'bs-custom-file-input';\n\n\nconst rgFileInput = () => {\n  bsCustomFileInput.init();\n  // bsCustomFileInput.destroy();\n  // init\n  // Finds your Bootstrap custom file input and will make them dynamic.\n  // Parameters\n  // inputSelector\n  // default value: .custom-file input[type=\"file\"]\n  // type: string\n  // You can pass a custom input selector, but be sure to pass a file input selector\n  // formSelector\n  // default value: form\n  // type: string\n  // Allows you to pass a custom form selector, but be sure to pass a form selector\n  // destroy\n  // Removes this plugin from your Bootstrap custom file input and restore them at their first initial state\n};\nexport default rgFileInput;\n","const industryAddon = () => {\n  const industryAddBtn = document.querySelector('[data-add=\"industry\"]');  \n  if (industryAddBtn) {\n    const maxindustryQuantity = 3;\n    let industryQuantity = 0;\n    const industryInput = document.querySelector('[data-input=\"industry\"]');\n    const industryAddedList = document.querySelector('[data-list=\"industry\"]');    \n    const industryAddedItems = document.querySelectorAll('li.added-item');\n    if (industryAddedItems) industryQuantity = [...industryAddedItems].length;\n\n    const addIndustry = () => {\n      const addedItems = [...industryAddedList.querySelectorAll('input[type=hidden]')].map(item => item.value);\n      console.log(addedItems);\n      if (!addedItems.includes(industryInput.value) && industryInput.value.trim() !== '' && industryQuantity < maxindustryQuantity) {\n        const industryLi = document.createElement('li');\n        industryLi.className = 'added-item';\n        industryLi.innerHTML = `<span class=\"added-item-t\">${industryInput.value}</span>\n          <input type=\"hidden\" id=\"industry-${industryQuantity + 1}\" value = ${industryInput.value}>\n          <button class=\"item-close-btn\">\n            <svg class=\"close-icon\" width=\"9\" height=\"9\" viewBox=\"0 0 14 14\" fill=\"none\">\n              <path d=\"M13.4435 11.7739C13.913 12.2435 13.913 12.9739 13.4435 13.4435C13.2087 13.6783 12.9217 13.7826 12.6087 13.7826C12.2956 13.7826 12.0087 13.6783 11.7739 13.4435L7 8.66956L2.22609 13.4435C1.9913 13.6783 1.70435 13.7826 1.3913 13.7826C1.07826 13.7826 0.791302 13.6783 0.55652 13.4435C0.0869544 12.9739 0.0869544 12.2435 0.55652 11.7739L5.33043 7L0.55652 2.22608C0.0869544 1.75652 0.0869544 1.02608 0.55652 0.55652C1.02608 0.0869544 1.75652 0.0869544 2.22609 0.55652L7 5.33043L11.7739 0.55652C12.2435 0.0869544 12.9739 0.0869544 13.4435 0.55652C13.913 1.02608 13.913 1.75652 13.4435 2.22608L8.66956 7L13.4435 11.7739Z\" fill=\"#FFFFFF\"></path>\n            </svg>\n          </button>`;\n        // industryInput.value = '';//uset only for clear input; for select not need clear value\n        industryAddedList.append(industryLi);\n        industryQuantity += 1;\n      }\n    };\n    const removeIndustry = (e) => {\n      const closeitem = e.target.closest('button')\n      if (!closeitem) return;\n      closeitem.closest('li.added-item').remove();\n      industryQuantity -= 1;\n    };\n    industryAddBtn.addEventListener('click', addIndustry);\n    industryAddedList.addEventListener('click', removeIndustry);\n  }\n};\nexport default industryAddon;\n","const industruReasonChange = () => {\n  const reasonChangeForm = document.querySelector('[data-form=\"reason\"]');\n  if (reasonChangeForm) {    \n    const changeReasonBtns = document.querySelectorAll(\n      '[data-change=\"reason\"]'\n    );\n\n    const changeReason = (e) => {\n      const inputElement = e.target\n        .closest('.input-group')\n        .querySelector('[data-input=\"reason\"]');\n      if (inputElement) {\n        inputElement.removeAttribute('readonly');\n        inputElement.value = `reason ${inputElement.dataset.reason}`;\n        inputElement.focus();\n      }\n    };\n    if (changeReasonBtns) {\n      [...changeReasonBtns].map(item => item.addEventListener('click', changeReason));\n    }\n  }\n};\nexport default industruReasonChange;\n","/* eslint import/no-extraneous-dependencies: [\"error\", {\"peerDependencies\": true}] */\n// import 'jquery';\n// import * as $ from 'jquery';\n\n// import 'Popper';\n// import Popper from 'popper.js/dist/umd/popper';\n\n// // import 'bootstrap';\n// import 'bootstrap/js/dist/alert';\n// import 'bootstrap/js/dist/button';\n// import 'bootstrap/js/dist/carousel';\n// import 'bootstrap/js/dist/collapse';\n// import 'bootstrap/js/dist/dropdown';\n// import 'bootstrap/js/dist/modal';\n// import 'bootstrap/js/dist/popover';\n// import 'bootstrap/js/dist/scrollspy';\n// import 'bootstrap/js/dist/tab';\n// import 'bootstrap/js/dist/toast';\n// import 'bootstrap/js/dist/tooltip';\n// import 'bootstrap/js/dist/util';\n\n// import 'select2';\n\nimport hmbBtn from './hmbBtn';\nimport select2Init from './select2Init';\nimport rgColorPicker from './rgColorPicker';\nimport rgFileInput from './rgFileInput';\nimport industryAddon from './industryAddon';\nimport industruReasonChange from './industruReasonChange';\n\n\n\n// //  translated to <script> into html for one page only\n// import rgOverviewChart from './rgOverviewChart';\n\n// //  translated to <script> into html for one page only\n// import rgReturnReasonsChart from './rgReturnReasonsChart';\n\n// //  translated to <script> into html for one page only\n// import rgWorldMapChart from './rgWorldMapChart';\n\ndocument.addEventListener('DOMContentLoaded', () => { \n  hmbBtn();\n  select2Init();    \n  rgColorPicker();\n  rgFileInput();\n  industryAddon();\n  industruReasonChange(); \n  // rgOverviewChart(); \n  // rgReturnReasonsChart();\n  // rgWorldMapChart();\n  \n\n  // console.log('APP Selected change: TEST')\n  // $('.js-select2').on('change', function(e) { \n  //   console.log('APP Selected change:', e.target )\n  // }); \n  \n  $('[data-toggle=\"tooltip\"]').tooltip();\n  \n});\n\n\n// window.Popper = Popper;\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}