{"version":3,"sources":["ui/components/HotelCard/HotelCard.js","ui/components/HotelList/HotelList.js","ui/components/Checkbox/Checkbox.js","ui/components/Filter/Filter.js","App.js","serviceWorker.js","index.js"],"names":["HotelCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDetail","setState","prevState","isDetailOpen","state","hotel","react_default","a","createElement","className","src","img","alt","name","Array","from","length","v","i","map","number","index","rate","key","version","viewBox","enableBackground","width","height","d","fill","onClick","concat","description","hasPool","price","single","double","twin","address","location","lat","lon","Component","HotelList","filteredHotels","components_HotelCard_HotelCard","CheckBox","intHandleChecked","isChecked","txt","_this2","_this$props$handleChe","handleChecked","type","checked","onChange","event","Filter","filterRate","newRate","isRate","applyFilter","isPool","isName","filterPool","newIsPool","filterName","newName","target","value","toLowerCase","_this$state","console","log","react_rating_default","start","stop","initialRating","emptySymbol","n","fullSymbol","Checkbox","placeholder","App","filteredList","hotels","filter","item","search","isLoading","Hotels","components_Filter_Filter","components_HotelList_HotelList","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2401827d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass HotelCard extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isDetailOpen: false,\r\n    };    \r\n  }\r\n\r\n  handleDetail =()=> {\r\n    this.setState((prevState) => ({\r\n      isDetailOpen: !prevState.isDetailOpen\r\n    }));\r\n  }\r\n\r\n  render(){    \r\n    const { hotel } = this.props; \r\n    const { isDetailOpen } = this.state;\r\n\r\n    return (\r\n      <div className=\"HotelCard\">\r\n        <div className=\"main-content\">\r\n          <div className=\"img-container\">\r\n            <img src={hotel.img} alt=\"hotel\"/>\r\n          </div>\r\n          <div className=\"shot-info-container\">\r\n            <div className=\"name-container\">\r\n              <span className=\"hotel-name\">{hotel.name}</span>\r\n            </div>\r\n            <div className=\"rate-container\">                  \r\n              {/*<span>Rate: {hotel.rate}</span>*/}\r\n              <div className=\"rate-stars-container\">\r\n                {\r\n                  // [0,1,2,3,4]\r\n                  Array.from({ length: 5 }, (v, i) => i).map( (number, index) => (                        \r\n                    hotel.rate && hotel.rate > number ? (\r\n                      <div className=\"rate-star-box\" key={index}>\r\n                        <svg className=\"rateOk\" version=\"1.1\" viewBox=\"0 0 19.481 19.481\" enableBackground=\"new 0 0 19.481 19.481\" width=\"20px\" height=\"20px\">\r\n                          <g>\r\n                            <path d=\"m10.201,.758l2.478,5.865 6.344,.545c0.44,0.038 0.619,0.587 0.285,0.876l-4.812,4.169 1.442,6.202c0.1,0.431-0.367,0.77-0.745,0.541l-5.452-3.288-5.452,3.288c-0.379,0.228-0.845-0.111-0.745-0.541l1.442-6.202-4.813-4.17c-0.334-0.289-0.156-0.838 0.285-0.876l6.344-.545 2.478-5.864c0.172-0.408 0.749-0.408 0.921,0z\" fill=\"#000000\"/>\r\n                          </g>\r\n                        </svg>\r\n                      </div>\r\n                    ):(\r\n                      <div className=\"rate-star-box\" key={index}>\r\n                        <svg className=\"rate\" version=\"1.1\" viewBox=\"0 0 19.481 19.481\" enableBackground=\"new 0 0 19.481 19.481\" width=\"20px\" height=\"20px\">\r\n                          <g>\r\n                            <path d=\"m10.201,.758l2.478,5.865 6.344,.545c0.44,0.038 0.619,0.587 0.285,0.876l-4.812,4.169 1.442,6.202c0.1,0.431-0.367,0.77-0.745,0.541l-5.452-3.288-5.452,3.288c-0.379,0.228-0.845-0.111-0.745-0.541l1.442-6.202-4.813-4.17c-0.334-0.289-0.156-0.838 0.285-0.876l6.344-.545 2.478-5.864c0.172-0.408 0.749-0.408 0.921,0z\" fill=\"#666666\"/>\r\n                          </g>\r\n                        </svg>\r\n                      </div> \r\n                    )                                            \r\n                  ))\r\n                }                    \r\n              </div>                  \r\n            </div>\r\n          </div>\r\n          <div className=\"action-container\">\r\n            <button\r\n              className=\"detail-button\"\r\n              onClick={this.handleDetail}\r\n            >\r\n              View Detail\r\n            </button>  \r\n          </div>\r\n        </div>\r\n\r\n        <div className={`detail-content ${isDetailOpen ? 'opened' : ''}`}>          \r\n          {\r\n            hotel.description ?\r\n            <div className=\"description-container\">\r\n              <p className=\"description\">\r\n                {hotel.description}\r\n              </p>\r\n            </div>\r\n            :\r\n            <div className=\"description-container\">\r\n              <p className=\"description\">No description</p>\r\n            </div>\r\n          }\r\n          \r\n          {\r\n            hotel.hasPool ? \r\n              <div className=\"hasPool-container\">              \r\n                <span className=\"hasPool\">\r\n                  Hotel has a pool: YES\r\n                </span>                              \r\n              </div>\r\n            :\r\n              <div className=\"hasPool-container\">              \r\n                <span className=\"hasPool\">\r\n                  Hotel has a pool: NO\r\n                </span>                              \r\n              </div>\r\n          }\r\n          {\r\n            hotel.price&&<div className=\"price-container\">\r\n              {hotel.price.single&&<span className=\"price\">\r\n                single price: {hotel.price.single}\r\n              </span>} \r\n              {hotel.price.double&&<span className=\"price\">\r\n                double price: {hotel.price.double}\r\n              </span>}\r\n              {hotel.price.twin&&<span className=\"price\">\r\n                twin price: {hotel.price.twin}\r\n              </span>}\r\n            </div>                \r\n          } \r\n          {\r\n            hotel.address&&<div className=\"address-container\">              \r\n              <span className=\"address\">\r\n                {hotel.address}\r\n              </span>                              \r\n            </div>\r\n          }  \r\n          {\r\n            hotel.location&&<div className=\"location-container\"> \r\n              {\r\n                hotel.location.lat&&<span className=\"location\"> \r\n                  {hotel.location.lat}\r\n                </span> \r\n              }            \r\n              {\r\n                hotel.location.lon&&<span className=\"location\">                \r\n                  {hotel.location.lon}\r\n                </span>   \r\n              }                           \r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HotelCard;\r\n","import React, { Component } from 'react';\r\nimport HotelCard from '../HotelCard/HotelCard.js';\r\n\r\nclass HotelList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {            \r\n    };\r\n  }  \r\n\r\n  render() {\r\n    const { filteredHotels } = this.props;\r\n    //console.log(filteredHotels);\r\n    return (      \r\n      <div className=\"HotelList\">\r\n        {\r\n          filteredHotels&&filteredHotels.map( (hotel, index) => (\r\n            <div className=\"hotelCard-container\" key={index}>\r\n              <HotelCard\r\n                hotel={hotel}\r\n              />\r\n            </div>\r\n          ))\r\n        }\r\n      </div>          \r\n    );\r\n  }\r\n}\r\n\r\nexport default HotelList;\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass CheckBox extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isChecked: false\r\n    };\r\n    //this.handleChecked = this.handleChecked.bind(this); //Sometimes I prefer use arrow functions\r\n  }\r\n\r\n  intHandleChecked =()=> {\r\n    //this.setState({isChecked: !this.state.isChecked});\r\n    this.setState((prevState) => ({\r\n      isChecked: !prevState.isChecked\r\n    }));\r\n  }\r\n\r\n  render(){\r\n    // console.log(\"checkbox\");\r\n    // console.log(this.state.isChecked);\r\n    const { handleChecked = ()=>{} } = this.props;\r\n    \r\n    var txt;\r\n    if (this.state.isChecked) {\r\n      txt = 'checked'\r\n    } else {\r\n      txt = 'unchecked'\r\n    }\r\n\r\n    return (\r\n      <div>\r\n         <input type=\"checkbox\" checked={this.state.isChecked} onChange={(event)=>{ this.intHandleChecked(); handleChecked(event);}}/>\r\n         <p>This box is {txt}</p>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default CheckBox;","import React, { Component } from 'react';\r\nimport Checkbox from '../Checkbox/Checkbox.js';\r\nimport Rating from 'react-rating';\r\n\r\nclass Filter extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isRate: 1,     \r\n      isPool: false,\r\n      isName: '',\r\n    };        \r\n  }\r\n\r\n  filterRate = (rate) => {       \r\n    const newRate = rate;    \r\n    this.setState(()=>({isRate: newRate}));\r\n    this.props.applyFilter(newRate, this.state.isPool, this.state.isName);    \r\n  } \r\n\r\n  filterPool = ()=>{ \r\n    const newIsPool = !this.state.isPool;                \r\n    this.setState((prevState) => ({\r\n      isPool: !prevState.isPool\r\n      //isPool: newIsPool\r\n    }));    \r\n    this.props.applyFilter(this.state.isRate, newIsPool,this.state.isName);    \r\n  }\r\n\r\n  filterName = (event) => {       \r\n    const newName = event.target.value.toLowerCase();    \r\n    this.setState(()=>({isName: newName}));\r\n    this.props.applyFilter(this.state.isRate, this.state.isPool, newName);    \r\n  }\r\n\r\n  \r\n\r\n  // formChange =()=>{    \r\n  //   this.props.applyFilter(this.state.isPool, this.state.isName);\r\n  // }  \r\n\r\n  render(){ \r\n    const { isRate, isPool, isName } = this.state;\r\n    console.log(\"filter\");\r\n    console.log(isRate, isPool, isName);\r\n    //const { applyFilter } = this.props;   \r\n    return (\r\n      <form>\r\n        <h3 className=\"Stars\">\r\n          Stars\r\n        </h3>\r\n        <Rating\r\n          start={0}\r\n          stop={5}\r\n          onChange={(rate) => (this.filterRate(rate))}\r\n          initialRating={isRate}\r\n          emptySymbol={\r\n            ['0+',2,3,4,5].map(n =>\r\n              <div>\r\n                <img src=\"./img/star.png\" className=\"icon\" alt=\"star\"/>\r\n                <span className=\"icon-text\">{n}</span>\r\n              </div>\r\n            )            \r\n          }\r\n          fullSymbol={\r\n            <img src=\"./img/starOk.png\" className=\"icon\" alt=\"Full star\" />\r\n          }\r\n        />\r\n\r\n        <h3 className=\"Pool-filter\">\r\n          Has a Pool \r\n        </h3> \r\n        <Checkbox        \r\n          handleChecked = {this.filterPool}\r\n        />\r\n        \r\n        <h3 className=\"Pool-filter\">\r\n          Hotel Name\r\n        </h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Hotel Name\"\r\n          onChange = {this.filterName}        \r\n        />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport Hotels from './data.json';\nimport HotelList from './ui/components/HotelList/HotelList.js';\nimport Filter from './ui/components/Filter/Filter.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hotels: [],\n      isLoading: false,      \n      filteredHotels: [],      \n    };\n  }\n  \n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    // fetch('')\n    //   .then(response => {\n    //     if (response.ok) {\n    //       return response.json();\n    //     } else {\n    //       throw new Error('Something went wrong ...');\n    //     }\n    //   })\n    //   .then(data => this.setState({ hotels: data.hotels, isLoading: false }))\n    //   .catch(error => this.setState({ error, isLoading: false }));\n    this.setState({ hotels: Hotels.hotels, filteredHotels: Hotels.hotels, isLoading: false })                 \n  }\n  \n  applyFilter =( isRate, isPool, isName )=>{\n    let filteredList = this.state.hotels;\n    console.log(\"App\");\n    console.log(isRate, isPool, isName);\n    filteredList = filteredList.filter((item)=>{         \n      return ( ( item.rate >= isRate) && (isPool ? item.hasPool === 'true' : true) && (~item.name.toLowerCase().search(isName)) )\n      //return ( item.name.toLowerCase().search(isName) !== -1 ) \n      //return ( isPool ? item.hasPool === 'true' : true )     \n    });           \n    this.setState(() => ({filteredHotels: filteredList}));\n  }\n\n  render() {\n    const { filteredHotels, isLoading } = this.state;    \n    // console.log(\"hotels\");   \n    // console.log(this.state.hotels);    \n    // console.log(\"filteredHotels\");\n    // console.log(this.state.filteredHotels); \n    \n\n    if (isLoading) {\n      return <p>Loading ...</p>;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"logined-body\">      \n          <div className=\"Sidebar\">\n            <Filter\n              applyFilter={this.applyFilter}\n            />\n          </div>\n          <HotelList \n            filteredHotels={filteredHotels}\n          />                      \n        </div>      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './ui/stylesheets/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}