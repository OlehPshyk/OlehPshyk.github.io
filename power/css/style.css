/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}h1{margin:0;font-family:"Open Sans";font-weight:400}h2{margin:0;font-family:"Open Sans";font-weight:400}h3{margin:0;font-family:"Open Sans";font-weight:400}h4{margin:0;font-family:"Open Sans";font-weight:400}h5{margin:0;font-family:"Open Sans";font-weight:400}h6{margin:0;font-family:"Open Sans";font-weight:400}.button{display:inline-block}.button-check{background-color:#5793e8;border-radius:20px;border:solid #5793e8;font-size:14px;color:#fff;padding:25px 50px;text-transform:uppercase}.button-check:hover{background-color:#2a76e2}.lead-button{background-color:#fafafa;border-radius:20px;border:solid #fafafa;font-size:14px;color:#5fb0ee;padding:15px 20px;text-transform:uppercase}.lead-button:hover{background-color:#e1e1e1;border:solid #e1e1e1}.container{width:100%;margin:0 auto}@media (min-width:1300px){.container{max-width:1200px}}body{font-size:16px;font-family:"Open Sans";color:#333}p{margin:0 0 1em}p:last-child{margin:0}a{color:#333;text-decoration:none;cursor:pointer}a.active{color:#3ec2ba}a:hover{color:#3ec2ba}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}.header-wrapper{position:relative;width:100%}.header-wrapper:after{content:'';position:absolute;bottom:20px;height:1px;width:100%;background-color:rgba(51,51,51,.15)}.header{padding:20px 50px 40px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.header .logo{width:291px;height:122px;-o-object-fit:cover;object-fit:cover}.header .header-info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:20px 0 0}.header .social{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header .mailto{display:inline-block;white-space:nowrap}.header .phone{display:inline-block;margin-left:20px;white-space:nowrap}.header .facebook{height:20px;margin-left:20px}.header .instagram{height:20px;margin-left:10px}.header .nav-list{margin:0 20px;padding:0;list-style:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.header .list-item:not(:last-child){margin-right:10px}.footer-wrapper{position:relative;padding:0 0 40px;width:100%}.footer-wrapper:after{content:'';position:absolute;bottom:40px;height:1px;width:100%;background-color:rgba(51,51,51,.15)}.footer{text-align:center}.footer .copyright{margin-bottom:10px}.footer .addr-item{display:block;margin-bottom:10px}.overlay1{min-height:696px;background:url(../img/overlay1.jpg) no-repeat center center;background-size:cover}.about-wrapper{background-color:#5fb0ee}.about{padding:80px 20% 280px}.about .about-title{font-size:48px;color:#fff;text-align:center;margin-bottom:50px}.about .img-container{text-align:center;margin-bottom:50px}.about .about-img{width:228px;height:228px;border-radius:50%}.about .about-text{font-size:20px;line-height:1.5}.services{background-color:transparent;height:560px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:url(../img/table.webp) no-repeat center center;background-size:cover}.services .services-title{font-size:48px;color:#fff}.services .services-title:not(:last-child){margin-bottom:20px}.lead{padding:100px 0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:space-evenly;-ms-flex-pack:space-evenly;justify-content:space-evenly;color:#fff}.lead .generetion-container{background:#5fb0ee;padding:100px 50px;-webkit-box-flex:0;-ms-flex:0 0 40%;flex:0 0 40%}.lead .domination-container{background:#5fb0ee;padding:100px 50px;-webkit-box-flex:0;-ms-flex:0 0 40%;flex:0 0 40%}.lead .lead-title{font-size:40px;text-align:center;margin-bottom:40px}.lead .lead-list{list-style:none;margin-bottom:80px}.lead .lead-item{position:relative;margin-bottom:30px}.lead .lead-item:before{content:'';position:absolute;border-right:2px solid #fff;border-bottom:2px solid #fff;width:10px;height:10px;top:calc(50% - 2px);left:-20px;-webkit-transform:translateY(-50%) rotate(-45deg);-ms-transform:translateY(-50%) rotate(-45deg);transform:translateY(-50%) rotate(-45deg)}.lead .lead-link{color:#fff;font-size:20px;-webkit-transition:.5s;transition:.5s}.lead .lead-link:hover{color:#666}.pricing-wrapper{background-color:#5fb0ee}.pricing{padding-top:30px}.pricing .pricing-top{text-align:center;margin-bottom:30px}.pricing .pricing-title{font-size:48px;font-family:lobster,cursive;color:#fff;margin-bottom:20px}.pricing .pricing-subtitle{font-size:40px;font-family:lobster,cursive;margin-bottom:40px}.pricing .pricing-panels{display:-webkit-box;display:-ms-flexbox;display:flex}.pricing .panel{-webkit-box-flex:1;-ms-flex:1 0 25%;flex:1 0 25%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;padding:50px 5% 40px;font-size:16px;line-height:1.5}.pricing .panel:nth-child(1){background-color:#000;color:#fff}.pricing .panel:nth-child(2){background-color:#636161;color:#fff}.pricing .panel:nth-child(3){background-color:#ececec}.pricing .panel:nth-child(4){background-color:#5cd59d}.pricing .panel-icon{width:90px;height:90px;margin-bottom:40px}.pricing .pricing-bottom{padding:10px 0}.pricing .note{font-size:20px;font-style:italic;padding:0 10%}.agency-wrapper{background-color:#5fb0ee}.agency{padding:120px 0;color:#fff;text-align:center}.agency .agency-top{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:80px;padding:0 5%}.agency .agency-title-container{-webkit-box-flex:1;-ms-flex:1 0 50%;flex:1 0 50%;padding:0 5%}.agency .agency-video-container{-webkit-box-flex:1;-ms-flex:1 0 50%;flex:1 0 50%}.agency .title{font-size:24px;margin-bottom:100px}.agency .title-price{font-size:44px}.check{padding:80px 10% 180px;text-align:center}.check .check-limiter{padding:0 10%}.check .check-title{font-size:48px;color:#000;margin-bottom:40px}.check .check-text{margin-bottom:60px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
